package mitm

import (
	"testing"

	"github.com/alecthomas/assert/v2"
)

func TestUnmarshalMetricsAck(t *testing.T) {
	var testCases = map[string]struct {
		input  []byte
		expect bool
	}{
		"inbound metrics ack": {input: []byte{
			0x39, 0x31, 0x30, 0x30, 0x30, 0x48, 0x4b, 0x55,
			0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x0d, 0x3a, 0x0f, 0x01, 0x0c, 0x17, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe9, 0xc2, 0xf5, 0x56, 0xe9, 0xc6, 0x58, 0x18,
			0x5a, 0x9e, 0xfe, 0x2c, 0xc4, 0x15, 0xe4, 0x81,
		}, expect: false},
	}
	for name, tc := range testCases {
		t.Run(name, func(tt *testing.T) {
			var ima InboundMetricsAckPacket
			err := ima.UnmarshalBinary(tc.input)
			assert.NoError(tt, err, name)
			assert.Equal(tt, ima.DeviceSerial[:], []byte(testDeviceSerial))
		})
	}
}
